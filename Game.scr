module Game;

type <purescript> "Int" from "Prim" as Int;
type <purescript> "Config" from "Game.BattleShip" as config; // Ship configuration

explicit global protocol BattleShip(role P1, role P2, role Board) {
    Init(Config) connect P1 to Board;
    Init(Config) connect P2 to Board;
    do Game(P1, Board, P2);
    disconnect P1 and Board;
    disconnect P2 and Board;
}

global protocol Game(role Atk, role Svr, role Def) {
    Coord(Int, Int) from Atk to Svr;
    choice at Svr { // Svr knows if it's a hit
        Hit() from Svr to Atk;
        Hit(Int, Int) from Svr to Def;
        do Game(Atk, Svr, Def);
    } or {
        choice at Svr {
            Sunk() from Svr to Atk;
            Sunk(Int, Int) from Svr to Def;
            do Game(Atk, Svr, Def);
        } or {
            Winner() from Svr to Atk;
            Loser() from Svr to Def;
        }
    } or {
        Miss() from Svr to Atk;
        Miss(Int, Int) from Svr to Def;
        do Game(Def, Svr, Atk);
    }
}
